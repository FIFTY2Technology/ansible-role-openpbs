---

- name: Gather facts about existing OpenPBS installation
  ansible.builtin.stat:
    path: /opt/pbs/libexec/pbs_init.d
  register: _openpbs_installation

- name: Get version if installation of OpenPBS was detected
  block:
    - name: Get version of currently installed OpenPBS
      ansible.builtin.command:
        cmd: /opt/pbs/libexec/pbs_init.d --version
      register: _openpbs_installed_version_raw
      changed_when: false

    ###
    # Version output is formatted like this: 'pbs_version = 20.0.1'
    ###
    - name: Format output of version checking
      ansible.builtin.set_fact:
        _openpbs_installed_version: "{{ _openpbs_installed_version_raw.stdout.split('=')[1] | trim }}"
  when:
    - _openpbs_installation.stat.exists

###
# For the 'version()' test later, this variable has to be defined for all nodes.
###
- name: Request OpenPBS installation
  ansible.builtin.set_fact:
    _openpbs_installed_version: "0.0"
  when:
    - not _openpbs_installation.stat.exists

###
# Only required if we don't know the exact version number from 'openpbs_version'.
###
- name: Get latest OpenPBS version number from GitHub
  block:
    - name: Check for latest OpenPBS version available
      ansible.builtin.uri:
        url: "https://api.github.com/repos/openpbs/openpbs/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
      check_mode: false
      changed_when: false
      register: _openpbs_release
      retries: 3
      delay: 5
      delegate_to: localhost
      become: false
      run_once: true

    ###
    # If 'openpbs_version' is set to 'latest', we overwrite it here to the correct
    # version number provided by the GitHub API.
    ###
    - name: Set OpenPBS version available
      ansible.builtin.set_fact:
        openpbs_version: "{{ _openpbs_release.json.tag_name[1:] }}"
  when:
    - openpbs_version == 'latest'

###
# Only create this user on the headnode, the MoMs don't run a PBS dataservice.
###
- name: Create PBS datastore user
  ansible.builtin.user:
    name: "{{ openpbs_dbuser_username }}"
    system: true
    password: "{{ openpbs_dbuser_password | password_hash('sha512', 'nevergonnagiveyouup') }}"
    state: present
  when:
    - openpbs_server and not openpbs_mom
